// Styles for header, search and language selector
@mixin form-controls-style() {
  background: $theme-bg-lighter;
  border-color: $theme-bg-lighter;
  color: $navbar-default-link-hover-color;
}

// Adds text shadow to links, which have custom underline colour to break the line for type decenders
@mixin textShadowToCropUnderline($shadow-color) {
  text-shadow: .03em 0 $shadow-color, -.03em 0 $shadow-color, 0 .03em $shadow-color, 0 -.03em $shadow-color, .06em 0 $shadow-color, -.06em 0 $shadow-color, .09em 0 $shadow-color, -.09em 0 $shadow-color, .12em 0 $shadow-color, -.12em 0 $shadow-color, .15em 0 $shadow-color, -.15em 0 $shadow-color;
}

@mixin customUnderline($underline-color) {
  text-decoration: none;
  background: linear-gradient($underline-color, $underline-color),
  linear-gradient($underline-color, $underline-color), linear-gradient($underline-color, $underline-color);
  // Second value of each is width of line
  background-size: .05em 1px, .05em 1px, 1px 1px;
  background-repeat: no-repeat, no-repeat, repeat-x;
  background-position: 0% 93%, 100% 93%, 0% 93%;

  @media screen and (-webkit-min-device-pixel-ratio: 0) {
    background-position-y: 87%, 87%, 87%;
  }

  &:before,
  &:after,
  *,
  *:before,
  *:after {
    text-shadow: none;
  }
}

/**
 * This is where all your colours are declared.
 *
 * The key should be equivalent to the name of the
 * class to apply the theme colour, which is in the
 * format of 'theme-{$element}-{$color}'.
 *
 * Classes should be declared on the body so that they
 * can be accessed and applied to any element.
 */
$theme-colors: (
  red: #E51016,
  dark-red: #AD161E,
  pink: #B32A95,
  purple: #6239C8,
  blue: #1F6BFE,
  dark-blue: #123581,
  default-accent: $brand-primary,
  default-background: $theme-bg,
  teal: #00837A,
  green: #298436,
  dark-orange: #D34300,
  dark-ochre: #947200,
  black: #111,
  dark-grey: $gray,
  light-grey: #EAEAEA,
  white: #FFF,
);

/**
 * Theme header color
 */
@mixin theme-header-color {
  @each $name, $color in $theme-colors {
    .theme-header-#{$name} & {
      background-color: $color;
    }
  }
}

/**
 * Theme nav color
 */
@mixin theme-nav-color {
  @each $name, $color in $theme-colors {
    .theme-nav-#{$name} & {
      background-color: $color;
    }
  }
}

/**
 * Theme footer color
 */
@mixin theme-footer-color {
  @each $name, $color in $theme-colors {
    .theme-footer-#{$name} & {
      background-color: $color;
    }
  }
}

/**
 * Theme carousel color.
 * The background colour of the carousel when there is no image set.
 */
@mixin theme-carousel-color {
  @each $name, $color in $theme-colors {
    .theme-carousel-#{$name} & {
      background-color: $color;
    }
  }
}

/**
 * Theme accent color which defaults to background color.
 * Affects colour of buttons, current navigation items etc.
 *
 * You can specify a different CSS property to use when
 * calling the mixin e.g. @include theme-accent-color('color').
 *
 * You can also specify the hover/focus color of an element.
 * You can choose between lighten and darken, but this could
 * be extended to add other color manipulation techniques.
 *
 * This defaults to none so as not to bloat the CSS when there
 * is no hover state for an element.
 */
@mixin theme-accent-color($property: 'background-color', $type: 'none', $amount: 0%) {
  @each $name, $color in $theme-colors {
    body.theme-accent-#{$name} & {
      #{$property}: $color;

      @if ($type != 'none') {
        &:hover,
        &:focus {
          @if ($type == 'lighten') {
            #{$property}: lighten($color, $amount);
          } @else if ($type == 'darken') {
            #{$property}: darken($color, $amount);
          }
        }
      }
    }
  }
}

/**
 * Theme link colors
 */
@mixin theme-link-color {
  @each $name, $color in $theme-colors {
    .theme-link-#{$name} & {
      color: $color;
    }
  }
}
